generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  clerkId     String       @id @unique
  Favoris     Favoris[]
  Historique  Historique[]
  Proche      Proche?
  procheGeres ProcheGere[]
  Profil      Profil?
  rendezVous  RendezVous[]
}

model Profil {
  id               String    @id @default(cuid())
  prenom           String
  nom              String
  dateNaissance    DateTime?
  sexe             String
  telephone        String
  email            String    @unique
  ville            String
  assuranceMaladie String
  cin              String    @unique
  profession       String
  adresse          String
  codePostal       String
  lieuNaissance    String
  photoProfil      String?
  userId           String    @unique
  user             User      @relation(fields: [userId], references: [clerkId])
}

model Favoris {
  id        Int    @id @default(autoincrement())
  userId    String
  medecinId String
  user      User   @relation(fields: [userId], references: [clerkId])

  @@unique([userId, medecinId])
}

model Historique {
  id           Int    @id @default(autoincrement())
  userId       String
  rendezVousId String
  user         User   @relation(fields: [userId], references: [clerkId])
}

model Proche {
  id            Int          @id @default(autoincrement())
  prenom        String
  nom           String
  dateNaissance DateTime?
  sexe          String
  telephone     String
  ville         String
  lieuNaissance String
  photoProfil   String?
  adresse       String?
  codePostal    String?
  userAccountId String?      @unique
  userAccount   User?        @relation(fields: [userAccountId], references: [clerkId])
  gerants       ProcheGere[]
  rendezVous    RendezVous[]
}

model ProcheGere {
  id       Int    @id @default(autoincrement())
  userId   String
  procheId Int
  role     String
  proche   Proche @relation(fields: [procheId], references: [id])
  user     User   @relation(fields: [userId], references: [clerkId])

  @@unique([userId, procheId])
}


model Specialite {
  id           String         @id @default(cuid())
  nom          String         @unique
  listeMedecins ListeMedecins[]
}

model Ville {
  id           String         @id @default(cuid())
  nom          String         @unique
  region       String?
  listeMedecins ListeMedecins[]
}

model ListeMedecins {
  id             String      @id @default(cuid())
  nom            String
  adresse        String?
  specialite     Specialite  @relation(fields: [specialiteId], references: [id])
  specialiteId   String
  ville          Ville       @relation(fields: [villeId], references: [id])
  villeId        String
}
